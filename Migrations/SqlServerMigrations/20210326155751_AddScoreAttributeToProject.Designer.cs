// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectsApi.Helpers;

namespace ProjectsApi.Migrations.SqlServerMigrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210326155751_AddScoreAttributeToProject")]
    partial class AddScoreAttributeToProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectsApi.Entities.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BugsCount")
                        .HasColumnType("int");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<bool>("MadeDadeline")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = "5fb9953bd98214b6df37174d",
                            BugsCount = 74,
                            DurationInDays = 35,
                            MadeDadeline = false,
                            Name = "Backend Project",
                            Score = 88
                        },
                        new
                        {
                            Id = "5fb9953b9937c7bcd60c4bc5",
                            BugsCount = 52,
                            DurationInDays = 55,
                            MadeDadeline = false,
                            Name = "Design Project",
                            Score = 68
                        },
                        new
                        {
                            Id = "5fb9953b899dd436c5604120",
                            BugsCount = 34,
                            DurationInDays = 36,
                            MadeDadeline = true,
                            Name = "Backend Project",
                            Score = 90
                        },
                        new
                        {
                            Id = "5fb9953b97e765bfc40b0e64",
                            BugsCount = 32,
                            DurationInDays = 51,
                            MadeDadeline = true,
                            Name = "Frontend Project",
                            Score = 99
                        },
                        new
                        {
                            Id = "5fb9953b9cbcef501edc3282",
                            BugsCount = 42,
                            DurationInDays = 68,
                            MadeDadeline = true,
                            Name = "Design Project",
                            Score = 97
                        });
                });

            modelBuilder.Entity("ProjectsApi.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "5fb9953bd98214b6df37174d",
                            Email = "amir.lib@gmail.com",
                            JoinedAt = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amir Liberzon",
                            PasswordHash = new byte[] { 2, 111, 97, 220, 19, 221, 200, 231, 234, 43, 120, 188, 21, 63, 245, 136, 196, 9, 60, 212, 39, 169, 71, 1, 140, 152, 119, 231, 117, 174, 5, 78, 33, 126, 159, 153, 239, 135, 226, 36, 120, 253, 61, 233, 254, 44, 69, 18, 221, 47, 248, 140, 81, 94, 73, 152, 135, 218, 166, 172, 196, 245, 80, 101 },
                            PasswordSalt = new byte[] { 36, 11, 129, 254, 13, 245, 213, 238, 7, 145, 24, 236, 254, 106, 47, 34, 177, 250, 127, 62, 225, 126, 135, 176, 124, 9, 53, 230, 67, 131, 192, 2, 200, 33, 2, 120, 128, 238, 90, 157, 229, 14, 13, 135, 7, 111, 48, 72, 90, 49, 144, 19, 123, 21, 84, 48, 65, 144, 36, 173, 95, 194, 141, 242, 36, 27, 112, 229, 56, 250, 111, 58, 193, 119, 136, 184, 64, 43, 165, 203, 148, 246, 210, 221, 166, 68, 133, 220, 37, 34, 103, 164, 247, 82, 83, 75, 107, 16, 120, 95, 131, 190, 50, 188, 188, 166, 7, 28, 118, 119, 160, 116, 244, 130, 66, 52, 167, 47, 179, 225, 109, 97, 50, 246, 187, 95, 232, 17 },
                            Team = "Developers"
                        },
                        new
                        {
                            Id = "5fb9953b9937c7bcd60c4bc5",
                            Email = "inbal.bit@gmail.com",
                            JoinedAt = new DateTime(2021, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Inbal Biton",
                            PasswordHash = new byte[] { 241, 241, 113, 170, 178, 140, 105, 150, 99, 84, 242, 164, 158, 28, 113, 56, 51, 94, 47, 28, 93, 201, 246, 215, 94, 131, 63, 49, 161, 123, 188, 104, 71, 92, 52, 239, 237, 94, 19, 4, 10, 108, 244, 81, 63, 103, 255, 248, 39, 88, 214, 238, 106, 168, 202, 46, 254, 52, 254, 214, 172, 200, 85, 156 },
                            PasswordSalt = new byte[] { 37, 72, 232, 79, 155, 251, 163, 182, 242, 114, 106, 176, 1, 151, 153, 148, 24, 163, 235, 9, 125, 84, 251, 199, 255, 113, 115, 194, 21, 44, 123, 122, 53, 202, 108, 249, 168, 233, 74, 164, 109, 203, 96, 59, 79, 157, 229, 71, 232, 86, 162, 206, 129, 161, 22, 209, 24, 42, 112, 252, 222, 165, 212, 72, 73, 92, 153, 183, 209, 184, 93, 67, 115, 134, 200, 64, 31, 222, 96, 31, 169, 255, 190, 154, 34, 182, 159, 217, 214, 138, 108, 6, 86, 171, 233, 179, 176, 41, 151, 109, 214, 186, 212, 234, 194, 77, 145, 228, 60, 231, 141, 102, 162, 38, 114, 58, 157, 196, 142, 201, 1, 87, 44, 105, 167, 110, 66, 218 },
                            Team = "Developers"
                        },
                        new
                        {
                            Id = "5fb9953b899dd436c5604120",
                            Email = "lior.pez@gmail.com",
                            JoinedAt = new DateTime(2021, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lior Pezman",
                            PasswordHash = new byte[] { 119, 192, 18, 36, 116, 76, 176, 199, 209, 217, 14, 92, 106, 74, 71, 243, 49, 232, 89, 107, 5, 20, 23, 239, 174, 2, 143, 227, 183, 172, 242, 250, 174, 77, 128, 31, 98, 226, 115, 73, 173, 110, 32, 228, 145, 230, 208, 238, 189, 52, 253, 177, 151, 117, 22, 180, 223, 172, 1, 177, 159, 7, 72, 126 },
                            PasswordSalt = new byte[] { 91, 105, 29, 158, 16, 167, 83, 253, 252, 14, 236, 43, 243, 157, 147, 140, 233, 64, 193, 229, 151, 100, 228, 51, 114, 204, 21, 202, 197, 91, 104, 211, 54, 20, 229, 104, 70, 135, 38, 99, 223, 100, 19, 113, 13, 138, 68, 156, 215, 15, 218, 197, 184, 133, 68, 204, 211, 28, 78, 25, 77, 156, 14, 143, 30, 43, 161, 224, 61, 69, 132, 180, 48, 226, 37, 253, 7, 196, 212, 198, 171, 39, 241, 67, 150, 224, 15, 206, 19, 140, 235, 52, 86, 169, 216, 217, 240, 16, 7, 136, 206, 119, 245, 60, 202, 226, 77, 178, 224, 248, 105, 96, 109, 63, 94, 126, 243, 18, 235, 187, 133, 230, 99, 154, 221, 225, 155, 237 },
                            Team = "Marketing"
                        },
                        new
                        {
                            Id = "5fb9953b97e765bfc40b0e64",
                            Email = "ido.gold@gmail.com",
                            JoinedAt = new DateTime(2021, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ido Goldshtain",
                            PasswordHash = new byte[] { 224, 8, 220, 36, 250, 240, 124, 14, 170, 14, 77, 169, 185, 133, 4, 170, 137, 133, 76, 96, 186, 73, 50, 214, 120, 237, 90, 183, 189, 155, 146, 223, 238, 153, 164, 4, 174, 92, 171, 70, 2, 247, 5, 82, 51, 209, 158, 220, 186, 245, 173, 110, 14, 79, 212, 166, 2, 152, 17, 100, 168, 10, 94, 12 },
                            PasswordSalt = new byte[] { 227, 149, 73, 80, 195, 8, 58, 15, 147, 58, 22, 251, 79, 202, 12, 187, 194, 82, 235, 208, 100, 181, 118, 157, 92, 164, 67, 38, 169, 242, 55, 11, 13, 47, 41, 170, 66, 243, 222, 96, 17, 35, 250, 100, 234, 251, 73, 222, 122, 201, 255, 72, 69, 251, 213, 31, 187, 234, 138, 58, 13, 64, 112, 64, 204, 17, 80, 7, 74, 131, 23, 150, 74, 197, 125, 31, 239, 90, 68, 131, 199, 186, 56, 138, 141, 31, 101, 145, 225, 125, 158, 242, 114, 61, 69, 235, 132, 197, 48, 139, 116, 6, 121, 11, 175, 112, 58, 36, 7, 79, 197, 149, 74, 177, 74, 48, 223, 234, 252, 180, 41, 164, 137, 137, 92, 120, 23, 203 },
                            Team = "Marketing"
                        },
                        new
                        {
                            Id = "5fb9953b9cbcef501edc3282",
                            Email = "itamar.dellus@gmail.com",
                            JoinedAt = new DateTime(2021, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Itamar Fellus",
                            PasswordHash = new byte[] { 199, 115, 243, 191, 0, 20, 167, 158, 135, 169, 93, 43, 51, 175, 130, 53, 158, 85, 85, 77, 136, 130, 102, 102, 193, 224, 150, 118, 39, 77, 236, 24, 140, 240, 166, 191, 4, 103, 86, 218, 24, 186, 36, 5, 41, 97, 108, 67, 156, 54, 151, 193, 43, 48, 86, 52, 31, 132, 149, 59, 33, 231, 241, 60 },
                            PasswordSalt = new byte[] { 95, 219, 119, 92, 153, 129, 199, 96, 37, 173, 211, 46, 62, 9, 201, 200, 168, 100, 141, 42, 96, 161, 0, 193, 254, 255, 90, 220, 122, 21, 98, 247, 193, 212, 131, 148, 88, 138, 120, 12, 116, 255, 146, 96, 252, 70, 95, 212, 75, 1, 138, 188, 187, 125, 227, 206, 202, 28, 147, 178, 215, 71, 237, 47, 76, 54, 194, 157, 245, 163, 125, 104, 210, 143, 37, 68, 225, 131, 6, 206, 122, 67, 251, 137, 247, 202, 188, 95, 126, 97, 31, 189, 83, 100, 93, 31, 64, 2, 131, 179, 229, 40, 171, 67, 182, 113, 94, 199, 63, 58, 160, 168, 220, 41, 141, 126, 71, 22, 158, 245, 68, 22, 249, 141, 197, 216, 11, 161 },
                            Team = "QA"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
